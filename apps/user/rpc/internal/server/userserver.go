// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package server

import (
	"context"

	"go-zero-chat/apps/user/rpc/internal/logic"
	"go-zero-chat/apps/user/rpc/internal/svc"
	"go-zero-chat/apps/user/rpc/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) Login(ctx context.Context, in *user.LoginReq) (*user.LoginRes, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserServer) LoginCode(ctx context.Context, in *user.LoginCodeReq) (*user.LoginCodeRes, error) {
	l := logic.NewLoginCodeLogic(ctx, s.svcCtx)
	return l.LoginCode(in)
}

func (s *UserServer) Detail(ctx context.Context, in *user.DetailReq) (*user.LoginRes, error) {
	l := logic.NewDetailLogic(ctx, s.svcCtx)
	return l.Detail(in)
}

func (s *UserServer) Save(ctx context.Context, in *user.SaveReq) (*user.SaveRes, error) {
	l := logic.NewSaveLogic(ctx, s.svcCtx)
	return l.Save(in)
}

func (s *UserServer) GetUserToken(ctx context.Context, in *user.GetUserTokenReq) (*user.GetUserTokenRes, error) {
	l := logic.NewGetUserTokenLogic(ctx, s.svcCtx)
	return l.GetUserToken(in)
}

func (s *UserServer) CheckUserToken(ctx context.Context, in *user.CheckTokenReq) (*user.CheckTokenRes, error) {
	l := logic.NewCheckUserTokenLogic(ctx, s.svcCtx)
	return l.CheckUserToken(in)
}
